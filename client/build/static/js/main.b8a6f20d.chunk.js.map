{"version":3,"sources":["containers/LoginPage.js","components/Ability.js","components/AbilityList.js","Functions.js","components/Move.js","components/MoveList.js","components/Summary.js","components/PokeInfo.js","components/PokemonAvatar.js","containers/HomePage.js","components/PokeCard.js","containers/TeamPage.js","components/SnackbarPoke.js","App.js","index.js"],"names":["buttonStyle","width","LoginPage","props","state","login","undefined","password","this","axios","get","then","response","loggedUser","data","filter","account","openSnackBar","setUser","handleChangePage","post","event","stateObject","returnObj","target","id","value","bind","setState","Grid","style","marginTop","container","align","justify","spacing","item","xs","Button","onClick","handleLogin","variant","color","size","handleRegister","Paper","height","display","justifyContent","alignItems","padding","Typography","component","Box","fontSize","fontWeight","TextField","label","onChange","changeInput","type","getButtons","Component","Ability","loaded","ability","getApiData","$","ajax","url","dataType","cache","success","Card","CardContent","gutterBottom","names","name","effect_entries","short_effect","AbilityList","abilities","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","flexDirection","flexWrap","map","key","capitalizeFirst","str","charAt","toUpperCase","slice","getEnglishText","objectArray","index","find","object","language","typeColors","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","Move","move","border","power","accuracy","flavor_text_entries","MoveList","moveList","version_group_details","level_learned_at","move_learn_method","reverse","getLastFourMoves","aria-controls","Summary","src","sprite","alt","PokeInfo","pokemon","species","sprites","front_default","moves","hideDetail","editMode","Fragment","show","Dialog","open","DialogTitle","DialogContent","getPokemonInfo","DialogActions","getActions","CircularProgress","PokemonAvatar","detailOpen","getPokemonData","toggle","toggleDetail","Tooltip","title","Avatar","cursor","HomePage","user","userTeams","teams","length","userTeam","getUserTeam","getTeamPokemon","pokemonURL","getUserTeams","Fab","aria-label","position","right","bottom","PokeCard","selected","selectPokemon","backgroundColor","CardActionArea","CardMedia","CardActions","PureComponent","TeamPage","teamName","pokemonList","selectedPokemon","apiUrl","rand","Math","random","results","pokemonName","includes","splice","indexOf","push","hasOwnProperty","_id","update","getPokemon","getTeamNamePicker","getPokemonList","saveTeam","SnackbarPoke","snackOpen","snackMessage","message","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleSnackClose","ContentProps","action","IconButton","App","currentUser","currentPage","newPage","userData","CssBaseline","Container","maxWidth","alignContent","getContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8a6f20d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\n\r\nconst buttonStyle = {\r\n  width: \"150px\",\r\n}\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      state: true,\r\n      login: undefined,\r\n      password: undefined,\r\n    }\r\n  }\r\n\r\n  handleLogin() {\r\n    const {login, password} = this.state;\r\n\r\n    axios\r\n      .get('http://localhost:3001/api/getData', {\r\n        login: login,\r\n        password: password,\r\n      })\r\n      .then((response) => {\r\n        let loggedUser = response.data.data.filter(account => {\r\n          return account.login === login && account.password === password\r\n        });\r\n\r\n        if (loggedUser !== undefined && loggedUser[0] !== undefined) {\r\n          this.props.openSnackBar(\"Welcome \"+loggedUser[0].login+\"!\");\r\n          this.props.setUser(loggedUser[0]);\r\n          this.props.handleChangePage('home');\r\n        } else {\r\n          this.props.openSnackBar(\"The username or password is incorrect!\");\r\n        }\r\n      });\r\n  }\r\n\r\n  handleRegister() {\r\n    const {login, password} = this.state;\r\n    \r\n    axios\r\n      .get('http://localhost:3001/api/getData', {\r\n        login: login,\r\n      })\r\n      .then((response) => {\r\n        let loggedUser = response.data.data.filter(account => {\r\n          return account.login === login\r\n        });\r\n\r\n        if (loggedUser !== undefined && loggedUser[0] !== undefined) {\r\n          this.props.openSnackBar(\"The username \"+loggedUser[0].login+\" already exists!\");\r\n        } else {\r\n          axios\r\n            .post('http://localhost:3001/api/putData', {\r\n              login: login,\r\n              password: password,\r\n            })\r\n            .then((data) => this.props.openSnackBar(\"User \"+login+\" registered with sucess!\"));\r\n        }\r\n      });\r\n  }\r\n\r\n  changeInput(event) {\r\n    let stateObject = function() {\r\n      let returnObj = {};\r\n      returnObj[this.target.id] = this.target.value;\r\n         return returnObj;\r\n    }.bind(event)();\r\n\r\n    this.setState(stateObject);\r\n  }\r\n\r\n  getButtons() {\r\n    return (\r\n      <Grid\r\n        style={{marginTop: \"50px\"}}\r\n        container\r\n        align=\"center\"\r\n        justify=\"space-around\"\r\n        spacing={1} >\r\n        <Grid item xs={12}>\r\n            <Button\r\n              style={buttonStyle}\r\n              onClick={this.handleLogin.bind(this)}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\">\r\n              Login\r\n            </Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Button\r\n              style={buttonStyle}\r\n              onClick={this.handleRegister.bind(this)}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n              size=\"large\">\r\n              Register\r\n            </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {login, password} = this.state;\r\n\r\n    return (\r\n      <Paper id='loginContainer' style={{width: \"100%\", height: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n        <div style={{padding: \"20px\"}}>\r\n          <Grid\r\n            container\r\n            align=\"center\"\r\n            justify=\"space-around\"\r\n            spacing={3} >\r\n            <Grid item xs={12}>\r\n              <Typography component=\"div\">\r\n                <Box fontSize={50} fontWeight=\"fontWeightBold\">\r\n                    Dexit\r\n                </Box>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField id=\"login\" style={{width: \"300px\"}}value={login} label=\"Login\" onChange={this.changeInput.bind(this)}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField id=\"password\" style={{width: \"300px\"}}value={password} label=\"Password\" type=\"password\" onChange={this.changeInput.bind(this)}/>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {this.getButtons()}\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport $ from 'jquery';\r\n\r\nclass Ability extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loaded: false,\r\n      ability: \"\",\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    this.getApiData();\r\n  }\r\n\r\n  getApiData() {\r\n    $.ajax({\r\n      url: this.props.url,\r\n      dataType: \"json\",\r\n      cache: true,\r\n      success: function(data) {\r\n        this.setState({ability: data});\r\n        this.setState({loaded: true});\r\n      }.bind(this)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loaded) {\r\n      return \"Loading..\";\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Typography gutterBottom>\r\n            <b>{this.state.ability.names[2].name}</b>\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {this.state.ability.effect_entries[0].short_effect}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ability;\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Ability from './Ability';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\n\r\nclass AbilityList extends Component {\r\n  render() {\r\n    let {abilities} = this.props;\r\n\r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Typography variant=\"h6\" component=\"h6\">\r\n            Abilities\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\r\n            <Grid container justify=\"center\" spacing={1}>\r\n              {abilities.map(ability => {\r\n                return (\r\n                  <Grid key={ability.id} item xs={12}>\r\n                    <Ability url={ability.ability.url} />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AbilityList;\r\n","export function capitalizeFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nexport function getEnglishText(objectArray, index) {\r\n  let englishText = objectArray.find((object) => {\r\n      return object.language.name === \"en\";\r\n  });\r\n\r\n  return englishText[index];\r\n}\r\n\r\nexport const typeColors = {\r\n    normal: '#bcaaa4',\r\n    fire: '#EE8130',\r\n    water: '#6390F0',\r\n    electric: '#F7D02C',\r\n    grass: '#7AC74C',\r\n    ice: '#96D9D6',\r\n    fighting: '#C22E28',\r\n    poison: '#A33EA1',\r\n    ground: '#E2BF65',\r\n    flying: '#A98FF3',\r\n    psychic: '#F95587',\r\n    bug: '#A6B91A',\r\n    rock: '#B6A136',\r\n    ghost: '#735797',\r\n    dragon: '#6F35FC',\r\n    dark: '#705746',\r\n    steel: '#B7B7CE',\r\n    fairy: '#D685AD',\r\n};","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { capitalizeFirst, getEnglishText, typeColors } from './../Functions.js';\r\nimport $ from 'jquery';\r\n\r\nclass Move extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loaded: false,\r\n      move: \"\",\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    this.getApiData();\r\n  }\r\n\r\n  getApiData() {\r\n    $.ajax({\r\n      url: this.props.url,\r\n      dataType: \"json\",\r\n      cache: true,\r\n      success: function(data) {\r\n        this.setState({move: data});\r\n        this.setState({loaded: true});\r\n      }.bind(this)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loaded) {\r\n      return \"Loading..\";\r\n    }\r\n\r\n    return (\r\n      <Card style={{\r\n        border: \"solid 2px \" + typeColors[this.state.move.type.name] \r\n      }}>\r\n        <CardContent>\r\n          <Typography style={{color: typeColors[this.state.move.type.name]}} gutterBottom>\r\n            <b>{getEnglishText(this.state.move.names, 'name')}</b>\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            <b>Type: </b>{capitalizeFirst(this.state.move.type.name)}\r\n          </Typography>\r\n          {this.state.move.power && <Typography variant=\"body2\">\r\n            <b>Power: </b>{this.state.move.power}\r\n          </Typography>}\r\n          {this.state.move.accuracy && <Typography variant=\"body2\">\r\n            <b>Accuracy: </b>{this.state.move.accuracy}\r\n          </Typography>}\r\n          <Typography variant=\"body2\">\r\n            {getEnglishText(this.state.move.flavor_text_entries, 'flavor_text')}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Move;\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Move from './Move';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\n\r\nclass MoveList extends Component {\r\n  getLastFourMoves() {\r\n    let {moveList} = this.props;\r\n\r\n    moveList = moveList.filter(move => {\r\n      return move.version_group_details[0].level_learned_at <= 50 && move.version_group_details[0].move_learn_method.name === \"level-up\"\r\n    });\r\n    moveList.reverse();\r\n    moveList = moveList.slice(0, 4);\r\n\r\n    return moveList;\r\n  }\r\n\r\n  render() {\r\n    let moveList = this.getLastFourMoves();\r\n    \r\n    return (\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography variant=\"h6\" component=\"h6\">\r\n            Moves\r\n          </Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\r\n            <Grid container justify=\"center\" spacing={2}>\r\n              {moveList.map(move => {\r\n                return (\r\n                  <Grid key={move.id} item xs={12}>\r\n                    <Move url={move.move.url} />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoveList;\r\n","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {getEnglishText} from './../Functions.js';\r\nimport $ from 'jquery';\r\n\r\nclass Summary extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loaded: false,\r\n      data: \"\",\r\n    };\r\n  }\r\n  \r\n  componentWillMount() {\r\n    this.getApiData();\r\n  }\r\n\r\n  getApiData() {\r\n    $.ajax({\r\n      url: this.props.url,\r\n      dataType: \"json\",\r\n      cache: true,\r\n      success: function(data) {\r\n        this.setState({data: data});\r\n        this.setState({loaded: true});\r\n      }.bind(this)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loaded) {\r\n      return \"Loading..\";\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <div style={{display: \"flex\", justifyContent: \"center\"}}><img src={this.props.sprite} alt={this.state.data.name}/></div>\r\n          <Typography variant=\"body2\">\r\n            {getEnglishText(this.state.data.flavor_text_entries, 'flavor_text')}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Summary;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AbilityList from './AbilityList';\r\nimport MoveList from './MoveList';\r\nimport Summary from './Summary';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {capitalizeFirst} from './../Functions.js';\r\n\r\nclass PokeInfo extends Component {\r\n  getPokemonInfo() {\r\n    let {pokemon} = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Summary\r\n          url={pokemon.species.url}\r\n          sprite={pokemon.sprites.front_default}\r\n        />\r\n        <AbilityList\r\n          abilities={pokemon.abilities}\r\n          />\r\n        <MoveList\r\n          moveList={pokemon.moves}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getActions() {\r\n    let {hideDetail, editMode} = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {editMode && <Button onClick={hideDetail} color=\"primary\">\r\n          Pick\r\n        </Button>}\r\n        <Button onClick={hideDetail} color=\"secondary\">\r\n          Close\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let {pokemon, show} = this.props;\r\n\r\n    if (!pokemon) {\r\n      return <CircularProgress />;\r\n    }\r\n\r\n    return (\r\n      <Dialog open={show}>\r\n        <DialogTitle>\r\n          {capitalizeFirst(pokemon.name)}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {this.getPokemonInfo()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {this.getActions()}\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokeInfo;","import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PokeInfo from './../components/PokeInfo';\r\nimport {capitalizeFirst} from './../Functions.js';\r\nimport $ from 'jquery';\r\n\r\nclass PokemonAvatar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      detailOpen: false,\r\n      pokemon: undefined,\r\n    }\r\n  }\r\n\r\n  getPokemonData() {\r\n    $.ajax({\r\n      url: this.props.pokemon,\r\n      dataType: 'json',\r\n      cache: true,\r\n      success: function(data) {\r\n        this.setState({ pokemon: data });\r\n        this.setState({ name: data.name });\r\n      }.bind(this),\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPokemonData();\r\n  }\r\n\r\n  toggleDetail(toggle) {\r\n    this.setState({detailOpen: toggle});\r\n  }\r\n\r\n  render() {\r\n    let {pokemon, detailOpen} = this.state;\r\n\r\n    if (!pokemon) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <PokeInfo\r\n          pokemon={pokemon}\r\n          show={detailOpen}\r\n          hideDetail={this.toggleDetail.bind(this, false)}\r\n          />\r\n        <Tooltip title={capitalizeFirst(pokemon.name)}>\r\n          <Avatar\r\n            onClick={this.toggleDetail.bind(this, true)}\r\n            style={{width: \"100px\", height: \"100px\", cursor: \"pointer\"}}\r\n            alt={capitalizeFirst(pokemon.name)}\r\n            src={pokemon.sprites.front_default}\r\n            />\r\n        </Tooltip>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonAvatar;\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PokemonAvatar from './../components/PokemonAvatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: props.user,\r\n    }\r\n  }\r\n\r\n  getUserTeams() {\r\n    let userTeams = this.state.user.teams;\r\n\r\n    if (userTeams && userTeams.length > 0) {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n            {userTeams.map(userTeam => this.getUserTeam(userTeam))}\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Typography>\r\n          No teams found!\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  getUserTeam(userTeam) {\r\n    return (\r\n      <Grid item xs={12} align=\"center\" key={userTeam.name}>\r\n        <Paper style={{width: \"100%\", padding: \"20px\"}}>\r\n          <Typography component=\"div\">\r\n            <Box fontSize={30} fontWeight=\"fontWeightBold\">\r\n              {userTeam.name}\r\n            </Box>\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n            {this.getTeamPokemon(userTeam.pokemon)}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  getTeamPokemon(pokemon) {\r\n    return pokemon.map((pokemon) => {\r\n      let pokemonURL = 'https://pokeapi.co/api/v2/pokemon/'+pokemon;\r\n\r\n      return (\r\n        <Grid item key={pokemon} xs={2}>\r\n          <PokemonAvatar\r\n            pokemon={pokemonURL} />\r\n        </Grid>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let {handleChangePage} = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Grid container justify=\"center\" spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"div\">\r\n              <Box fontSize={50} fontWeight=\"fontWeightBold\">\r\n                  Your teams\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n          {this.getUserTeams()}\r\n        </Grid>\r\n        <Fab onClick={handleChangePage.bind(this, 'team')} variant=\"extended\" color=\"primary\" aria-label=\"add\" style={{position: \"fixed\", right: \"10px\", bottom: \"10px\"}}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;","import React, { PureComponent } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport PokeInfo from './../components/PokeInfo';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {capitalizeFirst} from './../Functions.js';\r\nimport $ from 'jquery';\r\n\r\nclass PokeCard extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      detailOpen: false,\r\n      pokemon: undefined,\r\n    }\r\n  }\r\n\r\n  getPokemonData() {\r\n    $.ajax({\r\n      url: this.props.pokemon,\r\n      dataType: 'json',\r\n      cache: true,\r\n      success: function(data) {\r\n        this.setState({ pokemon: data });\r\n        this.setState({ name: data.name });\r\n      }.bind(this),\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPokemonData();\r\n  }\r\n\r\n  toggleDetail(toggle) {\r\n    this.setState({detailOpen: toggle});\r\n  }\r\n\r\n  render() {\r\n    let {pokemon, detailOpen} = this.state;\r\n    let {selected, selectPokemon} = this.props\r\n\r\n    if (!pokemon) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <PokeInfo\r\n          pokemon={pokemon}\r\n          show={detailOpen}\r\n          hideDetail={this.toggleDetail.bind(this, false)}\r\n          editMode\r\n          />\r\n        <Card style={selected ? {backgroundColor: \"#ccff90\"} : {}}>\r\n          <CardActionArea onClick={selectPokemon.bind(this, pokemon.name)}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              height={'140'}\r\n              src={pokemon.sprites.front_default}\r\n              title={capitalizeFirst(pokemon.name)}\r\n            />\r\n            <CardContent>\r\n              <Typography component=\"h5\" variant=\"h5\">\r\n                {capitalizeFirst(pokemon.name)}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button size=\"small\" color=\"primary\" onClick={selectPokemon.bind(this, pokemon.name)}>\r\n              {!selected ? \"Pick\" : \"Undo pick\"}\r\n            </Button>\r\n            <Button size=\"small\" color=\"default\" onClick={this.toggleDetail.bind(this, true)}>\r\n              Summary\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokeCard;\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport PokeCard from './../components/PokeCard';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\n\r\nclass TeamPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      teamName: 'Team',\r\n      user: props.user,\r\n      pokemonList: undefined,\r\n      selectedPokemon: []\r\n    }\r\n  }\r\n\r\n  changeInput(event) {\r\n    this.setState({teamName: event.target.value});\r\n  }\r\n\r\n  getPokemonData(apiUrl) {\r\n    const rand = 0 + Math.random() * (600 - 0);\r\n\r\n    $.ajax({\r\n      url: \"https://pokeapi.co/api/v2/pokemon/?limit=15&offset=\"+rand,\r\n      dataType: \"json\",\r\n      cache: true,\r\n      success: function(data) {\r\n        this.setState({ pokemonList: data.results });\r\n      }.bind(this),\r\n    })\r\n  }\r\n\r\n  selectPokemon(pokemonName) {\r\n    let {selectedPokemon} = this.state;\r\n    let {openSnackBar} = this.props;\r\n\r\n    if (selectedPokemon.includes(pokemonName)) {\r\n      selectedPokemon.splice(selectedPokemon.indexOf(pokemonName), 1);\r\n    } else if (selectedPokemon.length < 6) {\r\n      selectedPokemon.push(pokemonName);\r\n    } else {\r\n      openSnackBar(\"Can't select more than 6 pokémon!\");\r\n      return false;\r\n    } \r\n\r\n    this.setState(selectedPokemon);\r\n  }\r\n\r\n  saveTeam() {\r\n    const {selectedPokemon, teamName} = this.state;\r\n    const {user, openSnackBar, handleChangePage, setUser} = this.props;\r\n    \r\n    axios\r\n      .get('http://localhost:3001/api/getData')\r\n      .then((response) => {\r\n        let loggedUser = response.data.data.filter(account => {\r\n          return account.login === user.login\r\n        })[0];\r\n        let teams = loggedUser.hasOwnProperty('teams') ? loggedUser.teams : [];\r\n\r\n        teams.push({\r\n          name: teamName,\r\n          pokemon: selectedPokemon\r\n        })\r\n\r\n        loggedUser.teams = teams;\r\n\r\n        axios\r\n          .post('http://localhost:3001/api/updateData', {\r\n            id: user._id,\r\n            update: { teams },\r\n          })\r\n          .then((data) => {\r\n            openSnackBar(\"Team saved with sucess!\");\r\n            setUser(loggedUser);\r\n            handleChangePage('home');\r\n          });\r\n      });\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getPokemonData();\r\n  }\r\n\r\n  getPokemonList() {\r\n    let {pokemonList} = this.state;\r\n\r\n    if (!pokemonList) {\r\n      return <CircularProgress />\r\n    }\r\n\r\n    return (\r\n      <Paper>\r\n        <Grid container justify=\"center\" spacing={2} style={{padding: \"20px\"}}>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"div\">\r\n              <Box fontSize={20} fontWeight=\"fontWeightBold\">\r\n                  Choose your pokémon\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container justify=\"center\" spacing={2}>\r\n              {pokemonList.map(pokemon => this.getPokemon(pokemon))}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  getPokemon(pokemon) {\r\n    let {selectedPokemon} = this.state;\r\n\r\n    return (\r\n      <Grid item xs={3} key={pokemon.id}>\r\n        <PokeCard\r\n          pokemon={pokemon.url}\r\n          selected={selectedPokemon.includes(pokemon.name)}\r\n          selectedPokemon={selectedPokemon}\r\n          selectPokemon={this.selectPokemon.bind(this)}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  getTeamNamePicker() {\r\n    return (\r\n      <Paper>\r\n        <Grid container justify=\"center\" spacing={2} style={{padding: \"20px\"}}>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"div\">\r\n              <Box fontSize={20} fontWeight=\"fontWeightBold\">\r\n                Choose your team name\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField id=\"standard-basic\" label=\"Team name\" value={this.state.teamName} onChange={this.changeInput.bind(this)} />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid container justify=\"center\" spacing={5}>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"div\">\r\n              <Box fontSize={50} fontWeight=\"fontWeightBold\">\r\n                  New team\r\n              </Box>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {this.getTeamNamePicker()}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {this.getPokemonList()}\r\n          </Grid>\r\n        </Grid>\r\n        <Fab onClick={this.saveTeam.bind(this)} variant=\"extended\" color=\"primary\" aria-label=\"add\" style={{position: \"fixed\", right: \"10px\", bottom: \"10px\"}}>\r\n          <SaveIcon />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamPage;","import React, { Component } from 'react'; \r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass SnackbarPoke extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      snackOpen: props.open,\r\n      snackMessage: props.message,\r\n    }\r\n  }\r\n\r\n  handleSnackClose(event, reason){\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      snackOpen: false,\r\n      snackMessage: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={this.state.snackOpen}\r\n        autoHideDuration={3000}\r\n        onClose={this.handleSnackClose.bind(this)}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span id=\"message-id\">{this.state.snackMessage}</span>}\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n       \t\t\tonClick={this.handleSnackClose.bind(this)}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>,\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SnackbarPoke;","import React, { Component } from 'react'; \r\nimport LoginPage from './containers/LoginPage';\r\nimport HomePage from './containers/HomePage';\r\nimport TeamPage from './containers/TeamPage';\r\nimport SnackbarPoke from './components/SnackbarPoke';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n    \tsnackOpen: false,\r\n\t\t\tsnackMessage: '',\r\n      currentUser: undefined,\r\n      currentPage: 'login',\r\n    }\r\n  }\r\n\r\n  handleChangePage(newPage) {\r\n    this.setState({currentPage: newPage});\r\n  }\r\n\r\n  setUser(userData) {\r\n    this.setState({currentUser: userData});\r\n  }\r\n\r\n  openSnackBar(message) {\r\n    this.setState({\r\n    \tsnackOpen: true,\r\n    \tsnackMessage: message\r\n    });\r\n  };\r\n\r\n  getContent() {\r\n  \tconst {currentPage} = this.state;\r\n\r\n  \tswitch (currentPage) {\r\n  \t\tcase 'login': \r\n  \t\t\treturn (\r\n  \t\t\t\t<LoginPage\r\n\t  \t\t\t\thandleChangePage={this.handleChangePage.bind(this)}\r\n\t  \t\t\t\tsetUser={this.setUser.bind(this)}\r\n\t  \t\t\t\topenSnackBar={this.openSnackBar.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n  \t\tcase 'home': \r\n\t\t    return (\r\n\t    \t\t<HomePage\r\n\t\t    \t\tuser={this.state.currentUser}\r\n\t  \t\t\t\thandleChangePage={this.handleChangePage.bind(this)}\r\n\t    \t\t/>\r\n    \t\t);\r\n  \t\tcase 'team': \r\n\t\t    return (\r\n\t    \t\t<TeamPage\r\n\t\t    \t\tuser={this.state.currentUser}\r\n\t  \t\t\t\thandleChangePage={this.handleChangePage.bind(this)}\r\n\t  \t\t\t\topenSnackBar={this.openSnackBar.bind(this)}\r\n\t  \t\t\t\tsetUser={this.setUser.bind(this)}\r\n\t    \t\t/>\r\n    \t\t);\r\n  \t\tdefault: \r\n\t\t    return \"Error!\"\r\n  \t}\r\n\t}\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Container maxWidth=\"md\" style={{height: \"100%\", display: \"flex\", justifyContent: \"center\", alignContent: \"center\"}}>\r\n\t\t      <SnackbarPoke message={this.state.snackMessage} open={this.state.snackOpen}/>\r\n\t        {this.getContent()}\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './App.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}